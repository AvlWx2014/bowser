name: CI
on:
  pull_request:
    branches:
      - main
      - dev
    paths-ignore:
      - docs/
      - "*.md"
      - Containerfile
  push:
    branches:
      - main
    paths-ignore:
      - docs/
      - "*.md"
      - Containerfile
concurrency:
  group: ${{ github.event.number || github.run_id }}
  cancel-in-progress: true
jobs:
  StaticAnalysis:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
      - name: Setup Python (3.11)
        uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38  # v5.4.0
        with:
          python-version: "3.11"
          architecture: x64
      - name: Install PDM
        run: pip install setuptools wheel pdm
      - name: Cache Venv
        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf  # v4.2.2
        with:
          path: .venv
          key: venv-${{ hashFiles('pdm.lock') }}
          restore-keys: |
            venv-
      - name: Provision Environment
        run: pdm install -G aws -d
        if: steps.cache-venv.outputs.cache-hit != 'true'
      - name: Lint
        run: pdm lint-check
      - name: Check Formatting
        run: pdm check-formatting
      - name: Type Check
        run: pdm type-check
      - name: Security Scan
        run: pdm security-scan
  TestSuite:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
      - name: Setup Python (3.11)
        uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38  # v5.4.0
        with:
          python-version: "3.11"
          architecture: x64
      - name: Cache Venv
        id: cache-venv
        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf  # v4.2.2
        with:
          path: .venv
          key: venv-${{ hashFiles('pdm.lock') }}
          restore-keys: |
            venv-
      - name: Install PDM
        run: pip install setuptools wheel pdm
      - name: Provision Environment
        run: pdm install -G aws -d
        if: steps.cache-venv.outputs.cache-hit != 'true'
      - name: Unit Tests
        run: pdm test


